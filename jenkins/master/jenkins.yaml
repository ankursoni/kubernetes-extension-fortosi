jenkins:
  systemMessage: "Configured automatically.\n"

  globalNodeProperties:
  - envVars:
      env:
      - key: CONTAINER_REGISTRY_URL
        value: <CONTAINER_REGISTRY_URL>
      - key: CONTAINER_REPOSITORY_NAME
        value: <CONTAINER_REPOSITORY_NAME>
      - key: ENABLE_LOCAL_DOCKER
        value: <ENABLE_LOCAL_DOCKER>

  clouds:
    - docker:
        name: "docker"
        disabled:
          enabledByChoice: <ENABLE_LOCAL_DOCKER>
        dockerApi:
          dockerHost:
            uri: "unix:///var/run/docker.sock"
          connectTimeout: 60
          readTimeout: 60
        containerCap: 25
        templates:
          - name: "jenkins-agent"
            labelString: "jenkins-agent"
            pullTimeout: 300
            remoteFs: "/home/jenkins/agent"
            retentionStrategy:
              idleMinutes: 15
            dockerTemplateBase:
              image: "<CONTAINER_REGISTRY_URL>/<CONTAINER_REPOSITORY_NAME>/<JENKINS_IMAGE_NAME>:jenkins-agent"
              pullCredentialsId: "container-registry-credentials"
              volumes:
                - "/var/run/docker.sock:/var/run/docker.sock"
            connector:
              attach:
                user: 

    - kubernetes:
        name: "kubernetes"
        directConnection: false
        jenkinsUrl: http://jenkins-master-internal-svc.<CICD_NAMESPACE>:8080
        containerCapStr: 25
        maxRequestsPerHostStr: 64
        connectTimeout: 60
        readTimeout: 60
        retentionTimeout: 5
        templates:
          - name: "jenkins-agent"
            label: "jenkins-agent"
            idleMinutes: 15
            yamlMergeStrategy: "override"
            yaml: |-
              <JENKINS_AGENT_TEMPLATE_YAML>

credentials:
  system:
    domainCredentials:
    - credentials:
      - usernamePassword:
          id: "github-credentials"
          description: "github-credentials"
          scope: GLOBAL
          username: "<GITHUB_USER_NAME>"
          password: "<GITHUB_USER_PAT>"
      - usernamePassword:
          id: "container-registry-credentials"
          description: "container-registry-credentials"
          scope: GLOBAL
          username: "<CONTAINER_REGISTRY_USER_NAME>"
          password: "<CONTAINER_REGISTRY_USER_PASSWORD>"
      - file:
          id: "kubeconfig-secret"
          description: "kubeconfig-secret"
          scope: GLOBAL
          fileName: "kubeconfig-secret"
          secretBytes: "{<KUBECONFIG-SECRET>}"

jobs:
  - script: >
      organizationFolder("<GITHUB_ORG>-init") {
        displayName("<GITHUB_ORG>-init")
        organizations {
          github {
            credentialsId("github-credentials")
            repoOwner("<GITHUB_ORG>")
            traits {
              gitHubBranchDiscovery {
                strategyId(3)
              }
              sourceWildcardFilter  {
                includes("<INIT_REPO>")
                excludes("")
              }
            }
          }
        }
        configure {
          it / 'projectFactories' / 'org.jenkinsci.plugins.workflow.multibranch.WorkflowMultiBranchProjectFactory' << 'scriptPath'('Jenkinsfile')
        }
        triggers {
            periodic(1800)
        }
      }
