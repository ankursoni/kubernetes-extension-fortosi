apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins-master
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins-master-app
  template:
    metadata:
      namespace: {{ .Values.namespace }}
      labels:
        app: jenkins-master-app
    spec:
      serviceAccountName: pod-admin-sa
      imagePullSecrets:
        - name: container-registry-secret
      initContainers:
        - name: volume-mount
          image: ubuntu
          command: [
            "sh", "-c", "chown -R 1000:1000 /var/jenkins_home \
              # useradd jenkins -u 1000 && \
              # docker_gid=$(cat /etc2/group | grep -oP '^docker:x:\\K\\d+(?=:.*$)') && \
              # groupadd docker -g $docker_gid && \
              # usermod -aG docker jenkins \
            "]
          volumeMounts:
            - mountPath: /var/jenkins_home
              subPath: jenkins_home
              name: jenkins-master-pvc
            - mountPath: /var/run/docker.sock
              name: host-docker-sock
            - mountPath: /etc2
              name: host-etc
      containers:
        - name: jenkins-master-app
          image: {{ .Values.image.registry }}/{{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 8080
            - containerPort: 50000
          volumeMounts:
            - mountPath: /var/jenkins_home
              subPath: jenkins_home
              name: jenkins-master-pvc
            - mountPath: /var/run/docker.sock
              name: host-docker-sock
            - mountPath: ~/.kube
              name: azure-fileshare
          resources:
            requests:
              cpu: 500m
              memory: 0.5Gi
            limits:
              cpu: 1000m
              memory: 1Gi
      volumes:
        - name: jenkins-master-pvc
          persistentVolumeClaim:
            claimName: jenkins-master-pvc
        - name: host-docker-sock
          hostPath:
            path: /var/run/docker.sock
        - name: host-etc
          hostPath:
            path: /etc
        - name: azure-fileshare
          azureFile:
            secretName: azure-fileshare-secret
            shareName: deployment-kubeconfig
            readOnly: true